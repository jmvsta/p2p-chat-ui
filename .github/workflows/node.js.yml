name: Build and Release

on:
  push:
      branches:
        - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
    inputs:
      api_base_url:
        description: "Set the API Base URL"
        required: true
        default: "http://localhost:8080"
        
permissions:
  contents: write
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Read Major.Minor Version
        id: get_major_minor
        run: echo "MAJOR_MINOR=$(cat version)" >> $GITHUB_ENV
        
      - name: Fetch Previous Build Number (if exists)
        id: get_previous_build
        run: |
          PREV_VERSION=$(gh release list --limit 1 | awk '{print $1}' | tr -d 'v' || echo "")
          if [[ "$PREV_VERSION" == "${{ env.MAJOR_MINOR }}."* ]]; then
            PATCH=$(echo $PREV_VERSION | cut -d '.' -f3)
            PATCH=$((PATCH + 1))
          else
            PATCH=0
          fi
          echo "PATCH=$PATCH" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Set Full Version
        run: echo "VERSION=${{ env.MAJOR_MINOR }}.${{ env.PATCH }}" >> $GITHUB_ENV
        
      - name: Print Version
        run: echo "Building version ${{ env.VERSION }}"

      - name: Tag and Push New Version
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag v${{ env.VERSION }}
          git push origin v${{ env.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Set Environment Variables for Manual Run
        if: github.event_name == 'workflow_dispatch'
        run: |
          sed -i 's|VITE_API_BASE_URL=.*|VITE_API_BASE_URL=${{ github.event.inputs.api_base_url }}|g' .env
          
      - name: Install Dependencies
        run: npm install

      - name: Build Project
        run: npm run build

      - name: Package as ZIP
        run: |
          mkdir -p release
          cp -r dist/* release/
          zip -r release${{ env.VERSION }}.zip release/

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-artifact
          path: release${{ env.VERSION }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-artifact
          path: dist/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/** 
          tag_name: v${{ env.VERSION }}
          release_name: "Release v${{ env.VERSION }}"
          body: "Automated release from GitHub Actions"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
